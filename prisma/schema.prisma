// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @default(autoincrement()) @id
  name String
  email String @unique
  password String
  hasVerification Boolean @default(false)
  balance Decimal @default(0)
  accountCategory String
  createAt DateTime @default(now())
  //creaters Application[]
  applications UsersOnApplications[]
}

model Subcategory{
  id Int @default(autoincrement()) @id
  submane String
  category Category? @relation(fields: [categoryId],references: [id])
  categoryId Int?
}

model Category{
  id Int @default(autoincrement()) @id
  name String
  applications Application[]
  subcategories Subcategory[]
}

model Application{
  id BigInt @default(autoincrement()) @id
  name String
  //creater User @relation(fields: [createrId], references: [id])
  //createrId Int
  photo_url String
  category Category? @relation(fields: [categoryId],references: [id])
  categoryId Int?
  city City? @relation(fields: [cityId], references: [id])
  cityId Int?
  min_amount Float @default(0.0)
  realization_period DateTime
  comission Float @default(0.0)
  status String
  tags String
  description String
  createAt DateTime @default(now())
  events Event[]
  users UsersOnApplications[]
}

model Event{
  id BigInt @default(autoincrement()) @id
  name String
  createdAt DateTime @default(now())
  application Application? @relation(fields: [applicationId], references: [id])
  applicationId BigInt?
}

model UsersOnApplications{
    user User @relation(fields: [userId], references: [id])
    userId Int
    application Application @relation(fields: [applicationId], references: [id])
    applicationId BigInt
    assignedAt DateTime @default(now())
  @@id([userId,applicationId])
}

model City{
  id Int @id
  name String
  applications Application[]
  country Country? @relation(fields: [countryId], references: [id])
  countryId Int?
}

model Country{
  id Int @id
  name String
  cities City[]
}

